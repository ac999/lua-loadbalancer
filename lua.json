[
  {
    "code": "print(\"hello world!\")"
  },
  {
    "code": "print(\"lua_code\")"
  },
  {
    "code": "-- Variable definition:\nlocal a, b\n\n-- Initialization\na = 10\nb = 30\n\nprint(\"value of a:\", a)\n\nprint(\"value of b:\", b)\n\n-- Swapping of variables\nb, a = a, b\n\nprint(\"value of a:\", a)\n\nprint(\"value of b:\", b)\n\nf = 70.0/3.0\nprint(\"value of f\", f)"
  },
  {
    "code": "function max(num1, num2)\n\n   if (num1 > num2) then\n      result = num1;\n   else\n      result = num2;\n   end\n\n   return result; \nend\n\n-- calling a function\nprint(\"The maximum of the two numbers is \",max(10,4))\nprint(\"The maximum of the two numbers is \",max(5,6))"
  },
  {
    "code": "function average(...)\n   result = 0\n   local arg = {...}\n   for i,v in ipairs(arg) do\n      result = result + v\n   end\n   return result/#arg\nend\n\nprint(\"The average is\",average(10,5,3,4,5,6))"
  },
  {
    "code": "function getNumber()\n   local function getNumberHelper()\n      co = coroutine.create(function ()\n      coroutine.yield(1)\n      coroutine.yield(2)\n      coroutine.yield(3)\n      coroutine.yield(4)\n      coroutine.yield(5)\n      end)\n      return co\n   end\n\t\n   if(numberHelper) then\n      status, number = coroutine.resume(numberHelper);\n\t\t\n      if coroutine.status(numberHelper) == \"dead\" then\n         numberHelper = getNumberHelper()\n         status, number = coroutine.resume(numberHelper);\n      end\n\t\t\n      return number\n   else\n      numberHelper = getNumberHelper()\n      status, number = coroutine.resume(numberHelper);\n      return number\n   end\n\t\nend\n\nfor index = 1, 10 do\n   print(index, getNumber())\nend"
  },
  {
    "code": "function myfunction ()\n   n = n/nil\nend\n\nfunction myerrorhandler( err )\n   print( \"ERROR:\", err )\nend\n\nstatus = xpcall( myfunction, myerrorhandler )\nprint( status)"
  }
]